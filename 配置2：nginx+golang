
server {
    listen    80;
    listen    [::]:80;
    server_name kunlun.xingdongpai.com;

    limit_conn ops 50;

    #rewrite ^(.*) https://$host$1 permanent;
    return 301 https://kunlun.xingdongpai.com$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name kunlun.xingdongpai.com;

    pagespeed off;

    limit_conn ops 50;

    ssl_certificate /etc/nginx/ssl/cert/1_kunlun.xingdongpai.com_bundle.crt;
    ssl_certificate_key /etc/nginx/ssl/cert/2_kunlun.xingdongpai.com.key;
    ssl_dhparam  /etc/nginx/ssl/dhparam.pem;


    #=====反爬虫=========
    #禁止Scrapy等工具的抓取
    if ($http_user_agent ~* (Python|Java|Go|Js|Wget|Scrapy|Curl|HttpClient|Spider)) {
            return 444;
    }
    #禁止指定UA及UA为空的访问
    if ($http_user_agent ~ "SiteSucker|WinHttp|FetchURL|java/|FeedDemon|Jullo|JikeSpider|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|Java|Feedly|Apache-HttpAsyncClient|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|HttpClient|MJ12bot|heritrix|EasouSpider|Ezooms|BOT/0.1|YandexBot|FlightDeckReports|Linguee Bot|^$" ) {
            return 444;
    }
    #禁止的UA大全
    if ($bad_bot) {
        return 444;
    }
    #屏蔽单个IP的命令是
    #deny 123.45.6.7
    #封整个段即从123.0.0.1到123.255.255.254的命令
    #deny 123.0.0.0/8
    #封IP段即从123.45.0.1到123.45.255.254的命令
    #deny 124.45.0.0/16
    #封IP段即从123.45.6.1到123.45.6.254的命令是
    #deny 123.45.6.0/24
    # 以下IP皆为流氓
    #deny 58.95.66.0/24;
    #=====反爬虫 end=========

    #------资源缓存设置，除了open目录下的，都需要防盗链-----------
    location ^~ /assets/open/ {
          # 匹配任何以 /open/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条
          proxy_pass http://127.0.0.1:38888;
          proxy_set_header        Host $host;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          expires 30d;
          access_log  off;
          log_not_found off;
    }
    location ~* .(gif|jpeg|jpg|png|webp|svg|css|js|mp4|webm|ogg|mov)$ {
          #---资源防盗链---
          valid_referers server_names *.xingdongpai.com xingdongpai.com *.reqing.org reqing.org *.niaobi.org niaobi.org *.xingdongpai.org xingdongpai.org *.niaobi.net niaobi.net ~\.google\. ~\.yahoo\. ~\.baidu\.;                
          
          if ($invalid_referer) {
              return 444;
          }
          #---资源防盗链 end---
          proxy_pass http://127.0.0.1:38888;
          proxy_set_header        Host $host;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          expires 100d;
          access_log  off;
          log_not_found off;
      }
      location ~* .(eot|ttf|ttc|otf|eof|woff|woff2|txt|pdf)$ {
          #---资源防盗链---
          valid_referers server_names *.xingdongpai.com xingdongpai.com *.reqing.org reqing.org *.niaobi.org niaobi.org *.xingdongpai.org xingdongpai.org *.niaobi.net niaobi.net ~\.google\. ~\.yahoo\. ~\.baidu\.;                
          
          if ($invalid_referer) {
              return 444;
          }
          #---资源防盗链 end---
          proxy_pass http://127.0.0.1:38888;
          proxy_set_header        Host $host;
          proxy_set_header        X-Real-IP $remote_addr;
          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          expires max;
          access_log  off;
          log_not_found off;
      }
      #------资源缓存设置 end-----------


    location / {
       proxy_pass http://127.0.0.1:38888;
       proxy_set_header        Host $host;
       proxy_set_header        X-Real-IP $remote_addr;
       proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}


